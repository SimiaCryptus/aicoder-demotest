{
  "id" : "StringUtilsTest",
  "content_list" : [ {
    "type" : "package_declaration",
    "text" : "package utils",
    "tags" : [ "package", "utils" ]
  }, {
    "type" : "import_statements",
    "text" : "import org.junit.jupiter.api.Assertions.*; import org.junit.jupiter.api.Test;",
    "tags" : [ "import", "JUnit", "Assertions", "Test" ]
  }, {
    "type" : "class_declaration",
    "text" : "class StringUtilsTest",
    "tags" : [ "class", "StringUtilsTest", "unit test" ]
  }, {
    "type" : "method",
    "text" : "@Test fun testReverse()",
    "tags" : [ "method", "test", "reverse", "JUnit" ]
  }, {
    "type" : "assertion",
    "text" : "assertEquals(\"dcba\", StringUtils.reverse(\"abcd\"))",
    "tags" : [ "assertion", "reverse", "StringUtils", "unit test" ]
  }, {
    "type" : "assertion",
    "text" : "assertEquals(\"54321\", StringUtils.reverse(\"12345\"))",
    "tags" : [ "assertion", "reverse", "StringUtils", "unit test" ]
  }, {
    "type" : "assertion",
    "text" : "assertEquals(\"\", StringUtils.reverse(\"\"))",
    "tags" : [ "assertion", "reverse", "StringUtils", "unit test" ]
  }, {
    "type" : "assertion",
    "text" : "assertEquals(\"a\", StringUtils.reverse(\"a\"))",
    "tags" : [ "assertion", "reverse", "StringUtils", "unit test" ]
  }, {
    "type" : "method",
    "text" : "@Test fun testToUpperCase()",
    "tags" : [ "method", "test", "toUpperCase", "JUnit" ]
  }, {
    "type" : "assertion",
    "text" : "assertEquals(\"HELLO\", StringUtils.toUpperCase(\"hello\"))",
    "tags" : [ "assertion", "toUpperCase", "StringUtils", "unit test" ]
  }, {
    "type" : "assertion",
    "text" : "assertEquals(\"WORLD\", StringUtils.toUpperCase(\"WORLD\"))",
    "tags" : [ "assertion", "toUpperCase", "StringUtils", "unit test" ]
  }, {
    "type" : "assertion",
    "text" : "assertEquals(\"\", StringUtils.toUpperCase(\"\"))",
    "tags" : [ "assertion", "toUpperCase", "StringUtils", "unit test" ]
  }, {
    "type" : "assertion",
    "text" : "assertEquals(\"123\", StringUtils.toUpperCase(\"123\"))",
    "tags" : [ "assertion", "toUpperCase", "StringUtils", "unit test" ]
  }, {
    "type" : "method",
    "text" : "@Test fun testToLowerCase()",
    "tags" : [ "method", "test", "toLowerCase", "JUnit" ]
  }, {
    "type" : "assertion",
    "text" : "assertEquals(\"hello\", StringUtils.toLowerCase(\"HELLO\"))",
    "tags" : [ "assertion", "toLowerCase", "StringUtils", "unit test" ]
  }, {
    "type" : "assertion",
    "text" : "assertEquals(\"world\", StringUtils.toLowerCase(\"world\"))",
    "tags" : [ "assertion", "toLowerCase", "StringUtils", "unit test" ]
  }, {
    "type" : "assertion",
    "text" : "assertEquals(\"\", StringUtils.toLowerCase(\"\"))",
    "tags" : [ "assertion", "toLowerCase", "StringUtils", "unit test" ]
  }, {
    "type" : "assertion",
    "text" : "assertEquals(\"123\", StringUtils.toLowerCase(\"123\"))",
    "tags" : [ "assertion", "toLowerCase", "StringUtils", "unit test" ]
  }, {
    "type" : "method",
    "text" : "@Test fun testIsPalindrome()",
    "tags" : [ "method", "test", "isPalindrome", "JUnit" ]
  }, {
    "type" : "assertion",
    "text" : "assertTrue(StringUtils.isPalindrome(\"A man a plan a canal Panama\"))",
    "tags" : [ "assertion", "isPalindrome", "StringUtils", "unit test" ]
  }, {
    "type" : "assertion",
    "text" : "assertTrue(StringUtils.isPalindrome(\"racecar\"))",
    "tags" : [ "assertion", "isPalindrome", "StringUtils", "unit test" ]
  }, {
    "type" : "assertion",
    "text" : "assertFalse(StringUtils.isPalindrome(\"hello\"))",
    "tags" : [ "assertion", "isPalindrome", "StringUtils", "unit test" ]
  }, {
    "type" : "assertion",
    "text" : "assertTrue(StringUtils.isPalindrome(\"12321\"))",
    "tags" : [ "assertion", "isPalindrome", "StringUtils", "unit test" ]
  }, {
    "type" : "assertion",
    "text" : "assertFalse(StringUtils.isPalindrome(\"12345\"))",
    "tags" : [ "assertion", "isPalindrome", "StringUtils", "unit test" ]
  }, {
    "type" : "assertion",
    "text" : "assertTrue(StringUtils.isPalindrome(\"\"))",
    "tags" : [ "assertion", "isPalindrome", "StringUtils", "unit test" ]
  }, {
    "type" : "assertion",
    "text" : "assertTrue(StringUtils.isPalindrome(\"a\"))",
    "tags" : [ "assertion", "isPalindrome", "StringUtils", "unit test" ]
  } ]
}